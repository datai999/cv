{"version":3,"sources":["cv2.jpg","components/Navbar.js","components/Profile.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","data-target","icon","faHome","faCopy","faIdBadge","faGraduationCap","faAddressCard","id","Component","Profile","src","ImgProfile","alt","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,iC,sPCWtBC,E,uKAEjB,OACE,oCACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,kBAAC,WAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,4BAGA,kBAAC,WAAD,CAAMC,GAAG,IAAIC,cAAY,YAAYF,UAAU,mBAC7C,uBAAGA,UAAU,kBAAb,SAEF,wBAAIA,UAAU,8BACZ,4BACE,kBAAC,WAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAiBE,KAAMC,MADzB,SAKF,4BACE,kBAAC,WAAD,CAAMH,GAAG,WACP,kBAAC,IAAD,CAAiBE,KAAME,MADzB,WAKF,4BACE,kBAAC,WAAD,CAAMJ,GAAG,eACP,kBAAC,IAAD,CAAiBE,KAAMG,MADzB,eAKF,4BACE,kBAAC,WAAD,CAAML,GAAG,cACP,kBAAC,IAAD,CAAiBE,KAAMI,MADzB,cAKF,4BACE,kBAAC,WAAD,CAAMN,GAAG,eACP,kBAAC,IAAD,CAAiBE,KAAMK,MADzB,mBASV,wBAAIR,UAAU,UAAUS,GAAG,aACzB,4BACE,kBAAC,WAAD,CAAMR,GAAG,KACP,kBAAC,IAAD,CAAiBE,KAAMC,MADzB,SAKF,4BACE,kBAAC,WAAD,CAAMH,GAAG,WACP,kBAAC,IAAD,CAAiBE,KAAME,MADzB,WAKF,4BACE,kBAAC,WAAD,CAAMJ,GAAG,eACP,kBAAC,IAAD,CAAiBE,KAAMG,MADzB,eAKF,4BACE,kBAAC,WAAD,CAAML,GAAG,cACP,kBAAC,IAAD,CAAiBE,KAAMI,MADzB,cAKF,4BACE,kBAAC,WAAD,CAAMN,GAAG,eACP,kBAAC,IAAD,CAAiBE,KAAMK,MADzB,qB,GA1EwBE,a,iBCRfC,E,uKAEjB,OACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YAAYY,IAAKC,IAAYC,IAAI,sB,GALrBJ,aCChBK,E,uKAEjB,OACE,iCACE,kBAAC,EAAD,MACA,yBAAKf,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,iBAMb,oD,GAhBoBU,aCenBM,MAVf,WACE,OACE,kBAAC,gBAAD,KACE,oCACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,OCDrBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b7f4dfb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cv2.83f09bf4.jpg\";","import React, { Component } from \"react\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faCopy,\r\n  faIdBadge,\r\n  faGraduationCap,\r\n  faAddressCard,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <nav className=\"light-blue darken-4\">\r\n          <div className=\"container\">\r\n            <div className=\"nav-wrapper\">\r\n              <Link to=\"/\" className=\"brand-logo\">\r\n                Đức Anh Tài\r\n              </Link>\r\n              <Link to=\"/\" data-target=\"slide-out\" className=\"sidenav-trigger\">\r\n                <i className=\"material-icons\">menu</i>\r\n              </Link>\r\n              <ul className=\"right hide-on-med-and-down\">\r\n                <li>\r\n                  <Link to=\"/\">\r\n                    <FontAwesomeIcon icon={faHome} />\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/skills\">\r\n                    <FontAwesomeIcon icon={faCopy} />\r\n                    Skills\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/experience\">\r\n                    <FontAwesomeIcon icon={faIdBadge} />\r\n                    Experience\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/education\">\r\n                    <FontAwesomeIcon icon={faGraduationCap} />\r\n                    Education\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/portfolios\">\r\n                    <FontAwesomeIcon icon={faAddressCard} />\r\n                    Portfolios\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <ul className=\"sidenav\" id=\"slide-out\">\r\n          <li>\r\n            <Link to=\"/\">\r\n              <FontAwesomeIcon icon={faHome} />\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/skills\">\r\n              <FontAwesomeIcon icon={faCopy} />\r\n              Skills\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/experience\">\r\n              <FontAwesomeIcon icon={faIdBadge} />\r\n              Experience\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/education\">\r\n              <FontAwesomeIcon icon={faGraduationCap} />\r\n              Education\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/portfolios\">\r\n              <FontAwesomeIcon icon={faAddressCard} />\r\n              Portfolios\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ImgProfile from \".././cv2.jpg\";\r\n\r\nexport default class Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          <img className=\"activator\" src={ImgProfile} alt=\"Duc Anh Tai\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport Profile from \"./Profile.js\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Navbar />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m4 l3\">\r\n              <Profile />\r\n            </div>\r\n            <div className=\"col s12 m8 l9\">\r\n              {/* <About />\r\n              <Skills />\r\n              <Experience />\r\n              <Education />\r\n              <Portfolios /> */}\r\n              <p>nội dung</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./components/Home.js\";\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Route exact path=\"/\" component={Home} />\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}